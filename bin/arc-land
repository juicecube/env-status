#!/usr/bin/env node
const path = require('path'),
  chalk = require('chalk'),
  envStatus = require('../index');
const {spawnSync} = require('child_process');

const args = process.argv.slice(2);
const {BRANCH_TYPES} = envStatus;
const branchName = envStatus.getBranchName(),
  branchType = envStatus.getBranchType(),
  localVersion = require(path.resolve('package.json')).version;

const createDiff = (branch) => {
  spawnSync('arc', ['diff', `origin/${branch}`, ...args], {stdio: 'inherit'});
}

const dealFeatureBranch = (branch) => {
  envStatus.getOriginBranchVersion(branch).then((version) => {
    if (localVersion !== version) {
      console.log(chalk.red(`The '${branchName}' branch has a wrong version.`));
      process.exit(1);
    }
    createDiff(branch);
    process.exit(0);
  });
}

if (false) {
  console.log(localVersion);
  console.log(11111);
  envStatus.fetchEnvData('dev').then((value) => {
    console.log(value);
  });
} else {
  // 当前分支为others的话不处理
  if (branchType === BRANCH_TYPES.OTHERS) {
    console.log(chalk.yellow(`Branch '${branchName}' is not viable for arc-diff.`));
    process.exit(0);
  }

  // 当前分支为迭代分支
  if (branchType === BRANCH_TYPES.ITERATION_FEATURE) {
    const originBranch = envStatus.getVersionFromBranchName(branchName);
    dealFeatureBranch(originBranch);
  }

  // 当前分支为迭代fix分支
  if (branchType === BRANCH_TYPES.ITERATION_FIX) {
    dealFeatureBranch('master');
  }

  // 当前分支为迭代公共分支
  if (branchType == BRANCH_TYPES.ITERATION) {
    envStatus.getOriginBranchVersion('master').then((mVersion) => {
      const masterVersion = mVersion;
      envStatus.fetchEnvData('staging').then((sVersion) => {
        // staging环境是否异常
        if (sVersion !== masterVersion || value.err) {
          console.log(chalk.red(`Staging environment should keep same version with master!`));
          process.exit(1);
        }
        envStatus.fetchEnvData('production').then((pVersion) => {
          // production环境是否和master一致
          if (pVersion === masterVersion) {
            createDiff('master');
          } else {
            console.log(chalk.red(`The '${branchName}' branch is not viable for arc-diff`));
            process.exit(1);
          }
        });
      });
    });
  }

  // 当前分支为hotfix分支
  if (branchType == BRANCH_TYPES.HOTFIX || branchType == BRANCH_TYPES.ITERATION_FIX) {
    envStatus.getOriginBranchVersion('master').then((masterVersion) => {
      if (envStatus.compareVersion(localVersion, masterVersion) === 1) {
        createDiff('master');
        process.exit(0);
      }
      console.log(chalk.red(`Wrong version!`));
      process.exit(1);
    });
  }
}